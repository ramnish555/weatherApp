{"version":3,"sources":["images/weather.gif","Navbar.jsx","LoadImage.jsx","Card.jsx","App.js","index.js"],"names":["NavBar","className","style","width","textAlign","src","imagename","alt","maxWidth","maxHeight","LoadImage","icon","desc","imgsrc","includes","process","Card","useState","val","setVal","apiData","setData","getDetails","a","url","fetch","response","json","data","console","log","useEffect","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","onFocus","document","getElementsByClassName","display","onBlur","cod","padding","marginTop","name","sys","country","weather","description","Math","round","parseFloat","main","temp","toFixed","flexDirection","justifyContent","temp_min","temp_max","humidity","Date","dt","toLocaleTimeString","App","state","setState","setTimeout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9074f4e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/weather.581dd7df.gif\";","import React from 'react';\r\nimport imagename from './images/weather.gif';\r\n\r\nconst NavBar = ()=>{\r\n    return(\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <span className=\"navbar-brand\" style={{width: \"100%\",textAlign: \"center\"}}><span><img src={imagename} alt=\"content\" style={{maxWidth: \"50px\",maxHeight: \"50px\"}}/></span>Weather App</span>\r\n                </div>\r\n            </nav>\r\n            <nav className=\"navbar fixed-bottom navbar-light bg-light\">\r\n                <div style={{width: \"100%\",textAlign: \"center\"}}><small className=\"text-muted\">Â© Copyright 2021, Ramnish Chuadhary</small></div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\n\t\r\nconst LoadImage = ({icon,desc}) =>{\r\n    let imgsrc = \"\";\r\n    if(icon.includes('d')){\r\n        if(desc === \"clear sky\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/day.svg`;\r\n        }else if(desc === \"few clouds\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy-day-2.svg`;\r\n        }\r\n        else if(desc === \"scattered clouds\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy-day-1.svg`;\r\n        }\r\n        else if(desc.includes(\"clouds\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy.svg`;\r\n        }\r\n        else if(desc === \"shower rain\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/rainy-1.svg`;\r\n        }\r\n        else if(desc === \"rain\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/rainy-6.svg`;\r\n        }\r\n        else if(desc.includes(\"rain\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/rainy-7.svg`;\r\n        }\r\n        else if(desc.includes(\"thunderstorm\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/thunder.svg`;\r\n        }\r\n        else if(desc.includes(\"snow\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/snowy-6.svg`;\r\n        }\r\n        else if(desc === \"mist\"){  \r\n            imgsrc = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n        }\r\n    }else{\r\n        if(desc === \"clear sky\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/night.svg`;\r\n        }else if(desc === \"few clouds\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy-night-2.svg`;\r\n        }\r\n        else if(desc === \"scattered clouds\"){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy-night-1.svg`;\r\n        }\r\n        else if(desc.includes(\"clouds\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/cloudy.svg`;\r\n        }\r\n        else if(desc.includes(\"rain\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/rainy-7.svg`;\r\n        }\r\n        else if(desc.includes(\"thunderstorm\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/thunder.svg`;\r\n        }\r\n        else if(desc.includes(\"snow\")){\r\n            imgsrc = `${process.env.PUBLIC_URL}/animated/snowy-6.svg`;\r\n        }\r\n        else if(desc === \"mist\"){  \r\n            imgsrc = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <img src={imgsrc} className=\"icon\" alt=\"Content\"/> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoadImage;","import React, { useEffect, useState } from 'react';\r\nimport LoadImage from './LoadImage';\r\n\r\nconst Card = ()=>{\r\n    const [val,setVal] = useState(\"Amritsar\");\r\n    const [apiData,setData] = useState(null);\r\n\r\n    const getDetails = async () =>{\r\n        try{\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${val}&appid=3a01a344d25d44853cc11dfccbe4ddcd`;\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setData(data);\r\n            // console.log(data);\r\n        }catch(error){\r\n            console.log(\"error while Fetching\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDetails();\r\n    },[]);\r\n\r\n    const submitBtn = (event)=>{\r\n        event.preventDefault();\r\n        getDetails();\r\n    }\r\n\r\n    const hide = ()=>{\r\n        document.getElementsByClassName('fixed-bottom')[0].style.display=\"None\";\r\n    }\r\n\r\n    const show = ()=>{\r\n        document.getElementsByClassName('fixed-bottom')[0].style.display=\"block\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card\" style={{width: \"20rem\"}}>\r\n                {\r\n \r\n                }\r\n                <div className=\"card-body\">\r\n                <form className=\"row g-3\" onSubmit={submitBtn}>\r\n                    <div className=\"col-auto\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter City Name\" value={val} onChange={(event)=>{setVal(event.target.value)}} onFocus={hide} onBlur={show}/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type=\"submit\" className=\"btn btn-outline-secondary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    !apiData?null:\r\n                    apiData.cod === \"404\" || apiData.cod === \"400\"?<h5 className=\"card-title\" style={{textAlign: \"center\",padding:\"50px\"}}>City Not Found</h5>:\r\n                    (\r\n                        <>\r\n                        <div style={{textAlign: \"center\",marginTop: \"10px\"}}>\r\n                            <h5 className=\"card-title\">{apiData.name} ({apiData.sys.country})</h5>\r\n                            {/* <img src={`http://openweathermap.org/img/wn/${apiData.weather[0].icon}@2x.png`} className=\"icon\" alt=\"Content\"/> */}\r\n                            <LoadImage icon={apiData.weather[0].icon} desc={apiData.weather[0].description}/>\r\n                            <p className=\"card-text\">Current Temp :: <b>{(Math.round((parseFloat(apiData.main.temp)-273.15) * 100) / 100).toFixed(2)}Â°C</b></p>\r\n                            <p className=\"card-text\" style={{ display: \"flex\",flexDirection: \"row\",justifyContent: \"space-between\"}}>\r\n                                <span>\r\n                                Min :: <b>{(Math.round((parseFloat(apiData.main.temp_min)-273.15) * 100) / 100).toFixed(2)}Â°C\r\n                                </b></span>\r\n                                <span style={{textAlign:\"right\"}}>\r\n                                Max :: <b>{(Math.round((parseFloat(apiData.main.temp_max)-273.15) * 100) / 100).toFixed(2)}Â°C\r\n                                </b></span>\r\n                            </p>\r\n                            <p className=\"card-text\">Humidity :: <b>{apiData.main.humidity}</b></p>\r\n                            <span>(  {apiData.weather[0].description}  )</span>\r\n                            <p className=\"card-text\"><small className=\"text-muted\">Updated at {new Date(apiData.dt*1000).toLocaleTimeString()}</small></p>\r\n                        </div>\r\n                        </>\r\n                    )    \r\n                }   \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from 'react';\nimport NavBar from './Navbar';\nimport Card from './Card';\n\nfunction App() {\n  const [state, setState] = useState(true);\n\n  useEffect(()=>{\n    setTimeout(() => {\n      setState(false);\n    },1000);\n  })\n\n  return (\n    <>\n    {\n      state?null:(\n        <>\n          <NavBar/>\n          <div className=\"container1\">\n            <div className=\"flex-column justify-content-center\">\n              <Card/>\n            </div>\n          </div>\n        </>\n      )\n    }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}